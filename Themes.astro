---
export type Theme = 'light' | 'dark'

export interface Props {
  defaultTheme?: Theme
}

const { defaultTheme = 'light' } = Astro.props as Props
---

<script type="module" define:vars={{ defaultTheme }}>
  const STORAGE_KEY = 'theme'

  const prefersDark = window.matchMedia('(prefers-color-scheme: dark)')

  function getThemePreference() {
    return prefersDark.matches ? 'dark' : defaultTheme
  }

  function resolveTheme(setting) {
    const storageValue =
      setting !== undefined ? setting : localStorage.getItem(STORAGE_KEY)

    return storageValue || getThemePreference()
  }

  function writeTheme(theme) {
    document.documentElement.setAttribute('data-theme', theme)
    document.documentElement.style.colorScheme = theme
  }

  function handleStorageChange(event) {
    if (event.key !== STORAGE_KEY) return
    writeTheme(resolveTheme(event.newValue))
  }

  function handlePreferenceChange() {
    writeTheme(resolveTheme())
  }

  function handleThemeChange(event) {
    localStorage.setItem(STORAGE_KEY, event.detail)
    writeTheme(event.detail)
  }

  window.addEventListener('set-theme', handleThemeChange)
  window.addEventListener('storage', handleStorageChange)
  prefersDark.addEventListener('change', handlePreferenceChange)
  writeTheme(resolveTheme())
</script>
